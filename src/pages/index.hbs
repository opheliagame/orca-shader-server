<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="https://glitch.com/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <title>{{seo.title}}</title>
    
    <!-- meta tags for SEO and social sharing -->
    <link rel="canonical" href="{{seo.url}}">
    <meta name="description" content="{{seo.description}}">
    <meta property="og:title" content="{{seo.title}}">
    <meta property="og:type" content="article">
    <meta property="og:url" content="{{seo.url}}">
    <meta property="og:description" content="{{seo.description}}">
    <meta property="og:image" content="{{seo.image}}">
    <meta name="twitter:card" content="summary">

    <!-- import the webpage's stylesheet -->
    <link rel="stylesheet" href="/style.css" />
    
    <!-- import glslEditor js library -->
    <link type="text/css" rel="stylesheet" href="https://rawgit.com/patriciogonzalezvivo/glslEditor/gh-pages/build/glslEditor.css">
    <script type="application/javascript" src="https://rawgit.com/patriciogonzalezvivo/glslEditor/gh-pages/build/glslEditor.js"></script>

    <!-- this is a handlebars IF statement, checking for a custom "color" parameter set in server.js -->
    {{#if color}} 
    <style>
      .title {
        color: {{color}};
      }
    </style>
    {{/if}}    
  </head>
  <body>
      <div id="glsl_editor"></div>
  </body>
  <script type="text/javascript">
      const glslEditor = new GlslEditor('#glsl_editor', { 
          canvas_size: 500,
          canvas_draggable: true,
          theme: 'monokai',
          multipleBuffers: true,
          watchHash: true,
          fileDrops: true,
          menu: true
      });
      console.log(glslEditor)

      async function postData(url = '', data = {}) {
        // Default options are marked with *
        const response = await fetch(url, {
          method: 'POST', // *GET, POST, PUT, DELETE, etc.
          mode: 'cors', // no-cors, *cors, same-origin
          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
          credentials: 'same-origin', // include, *same-origin, omit
          headers: {
            'Content-Type': 'application/json'
            // 'Content-Type': 'application/x-www-form-urlencoded',
          },
          redirect: 'follow', // manual, *follow, error
          referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
          body: JSON.stringify(data) // body data type must match "Content-Type" header
        });
        return response.json(); // parses JSON response into native JavaScript objects
      }
    
      glslEditor.editor.on('change', () => {
        glslEditor.update();
        // console.log(glslEditor.editor.options.value);   // initial only
        console.log(glslEditor.editor.getValue());
        postData('/shader', {shader: glslEditor.editor.getValue()})
          .then(data => {
            console.log(data); // JSON data parsed by `data.json()` call
          });
      })
      
  </script>
  
</html>
